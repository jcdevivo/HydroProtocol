library("RODBC", lib.loc="C:/R/R-3.4.1/library")
library("dataRetrieval", lib.loc="C:/R/R-3.4.1/library")
library("EflowStats", lib.loc="C:/R/R-3.4.1/library")

chDH <- odbcConnect("HydroProtocol")

#Set looping parameters
looptargetx=50 # Number of records per packet to write to the database at a time
looptargety=865 # Number of record packets to write

# Start Outer loop
 y<-1
 repeat
{

if (exists('StatsOut3')) {rm(StatsOut3)}
if (exists('HITstation')) {rm(HITstation)}

# Pull POR and station info from database #
HITstation<- sqlFetch(chDH,"qry_HIT_DurationHighStats_standard_PORs_to_run", as.is=T)

# Start Loop
 x<-1
 repeat 
{

#reset variables from last run
if (exists ('dailyQ')) {rm(dailyQ)}
if (exists ('dailyQClean')) {rm(dailyQClean)}
if (exists ('year_type')) {rm(year_type)}
if (exists ('StatsOut')) {rm(StatsOut)}
if (exists ('StatsOut2')) {rm(StatsOut2)}
if (exists ('StatsOut.with.rownames')) {rm(StatsOut.with.rownames)}
if (exists ('sd')) {rm(sd)}
if (exists ('sn')) {rm(sn)}
if (exists ('ed')) {rm(ed)}
if (exists ('PORID')) {rm(PORID)}
if (exists ('floodThresh')) {rm(floodThresh)}
if (exists ('siteInfo')) {rm(siteInfo)}
if (exists ('drainageArea')) {rm(drainageArea)}
if (exists ('peakFlows')) {rm(peakFlows)}
if (exists ('StartYear')) {rm(StartYear)}
if (exists ('EndYear')) {rm(EndYear)}
QA="-"

# Fix date formats and other prep stuff
PORID<-HITstation[x,4]
StartYear<-strtoi(HITstation[x,6])
EndYear<-strtoi(HITstation[x,7])
sn<-HITstation[x,1]
year_type<-HITstation[x,5]
sd<-HITstation[x,8]
sd=as.Date(sd)
ed<-HITstation[x,9]
ed=as.Date(ed)


#Retrieve daily discharge data for period of record of interest
dailyQ <- readNWISdv(siteNumber = sn, parameterCd = "00060", startDate = sd, endDate = ed)

if (nrow(dailyQ)==0){
	floodThresh='Not Calculated' 	
	#add nulls for missing data, POR, Site number, and QA codes to data frame and write to database
	StatsOut2<-cbind(data.frame(th1=NA, th2=NA, th3=NA, site_no=sn, POR_ID=PORID,Qual_HITDurationHigh="NoFlowData",runtime=Sys.time()))
}else{ 

#Check data for completeness

dailyQClean <- validate_data(dailyQ[c("Date","X_00060_00003")],yearType=year_type)

if (dailyQClean==FALSE) {
	floodThresh='Not Calculated' 
	#add nulls for missing data, POR, Site number, and QA codes to data frame and write to database
	StatsOut2<-cbind(data.frame(dh1=NA, dh2=NA, dh3=NA, dh4=NA, dh5=NA, dh6=NA, dh7=NA, dh8=NA, dh9=NA, dh10=NA, dh11=NA, dh12=NA, dh13=NA, dh14=NA, dh15=NA, dh16=NA, dh17=NA, dh18=NA, dh19=NA, dh20=NA, dh21=NA, dh22=NA, dh23=NA, dh24=NA, site_no=sn, POR_ID=PORID,Qual_HITDurationHigh="MissingData",runtime=Sys.time()))

}else{

DailyFlowIsZero=any(is.element(0,dailyQClean$discharge))

#Get drainage area
siteInfo <- readNWISsite(siteNumber = sn)
drainageArea <- siteInfo$drain_area_va

#Get peak flows
peakFlows <- readNWISpeak(siteNumber = sn, startDate = sd, endDate = ed)
peakFlowMissingData=any(is.na(peakFlows$peak_va))
peakFlowMissingDate=any(is.na(peakFlows$peak_dt))

#Get flood recurence threshold

if (EndYear==StartYear){
	floodThresh='Not Calculated' 
	#add nulls for missing data, POR, Site number, and QA codes to data frame and write to database
	StatsOut2<-cbind(data.frame(dh1=NA, dh2=NA, dh3=NA, dh4=NA, dh5=NA, dh6=NA, dh7=NA, dh8=NA, dh9=NA, dh10=NA, dh11=NA, dh12=NA, dh13=NA, dh14=NA, dh15=NA, dh16=NA, dh17=NA, dh18=NA, dh19=NA, dh20=NA, dh21=NA, dh22=NA, dh23=NA, dh24=NA, site_no=sn, POR_ID=PORID,Qual_HITDurationHigh="1PeakFlowOneYear",runtime=Sys.time()))
}else
	if (nrow(peakFlows)==1){
	floodThresh='Not Calculated' 	
	#add nulls for missing data, POR, Site number, and QA codes to data frame and write to database
	StatsOut2<-cbind(data.frame(dh1=NA, dh2=NA, dh3=NA, dh4=NA, dh5=NA, dh6=NA, dh7=NA, dh8=NA, dh9=NA, dh10=NA, dh11=NA, dh12=NA, dh13=NA, dh14=NA, dh15=NA, dh16=NA, dh17=NA, dh18=NA, dh19=NA, dh20=NA, dh21=NA, dh22=NA, dh23=NA, dh24=NA, site_no=sn, POR_ID=PORID,Qual_HITDurationHigh="Only1PeakFlow",runtime=Sys.time()))	
}else
 	if (peakFlowMissingData==TRUE){
	floodThresh='Not Calculated' 
	#add nulls for missing data, POR, Site number, and QA codes to data frame and write to database
	StatsOut2<-cbind(data.frame(dh1=NA, dh2=NA, dh3=NA, dh4=NA, dh5=NA, dh6=NA, dh7=NA, dh8=NA, dh9=NA, dh10=NA, dh11=NA, dh12=NA, dh13=NA, dh14=NA, dh15=NA, dh16=NA, dh17=NA, dh18=NA, dh19=NA, dh20=NA, dh21=NA, dh22=NA, dh23=NA, dh24=NA, site_no=sn, POR_ID=PORID,Qual_HITDurationHigh="MissingPeakFlow",runtime=Sys.time()))
}else
 	if (peakFlowMissingDate==TRUE){
	floodThresh='Not Calculated' 
	#add nulls for missing data, POR, Site number, and QA codes to data frame and write to database
	StatsOut2<-cbind(data.frame(dh1=NA, dh2=NA, dh3=NA, dh4=NA, dh5=NA, dh6=NA, dh7=NA, dh8=NA, dh9=NA, dh10=NA, dh11=NA, dh12=NA, dh13=NA, dh14=NA, dh15=NA, dh16=NA, dh17=NA, dh18=NA, dh19=NA, dh20=NA, dh21=NA, dh22=NA, dh23=NA, dh24=NA,  site_no=sn, POR_ID=PORID,Qual_HITDurationHigh="MissingPeakFlowDate",runtime=Sys.time()))
}else
 	if(exists('peakFlows$peak_cd')){
	floodThresh='Not Calculated' 
	#add nulls for missing data, POR, Site number, and QA codes to data frame and write to database
	StatsOut2<-cbind(data.frame(dh1=NA, dh2=NA, dh3=NA, dh4=NA, dh5=NA, dh6=NA, dh7=NA, dh8=NA, dh9=NA, dh10=NA, dh11=NA, dh12=NA, dh13=NA, dh14=NA, dh15=NA, dh16=NA, dh17=NA, dh18=NA, dh19=NA, dh20=NA, dh21=NA, dh22=NA, dh23=NA, dh24=NA,  site_no=sn, POR_ID=PORID,Qual_HITDurationHigh="PeakFlowCodePresent",runtime=Sys.time()))
}else
	if (nrow(peakFlows)==0){
	floodThresh='Not Calculated' 
	#add nulls for missing data, POR, Site number, and QA codes to data frame and write to database
	StatsOut2<-cbind(data.frame(dh1=NA, dh2=NA, dh3=NA, dh4=NA, dh5=NA, dh6=NA, dh7=NA, dh8=NA, dh9=NA, dh10=NA, dh11=NA, dh12=NA, dh13=NA, dh14=NA, dh15=NA, dh16=NA, dh17=NA, dh18=NA, dh19=NA, dh20=NA, dh21=NA, dh22=NA, dh23=NA, dh24=NA,  site_no=sn, POR_ID=PORID,Qual_HITDurationHigh="NOPEAKFLOW",runtime=Sys.time()))
} else {

floodThresh <- get_peakThreshold(dailyQClean[c("date","discharge")], peakFlows[c("peak_dt","peak_va")], yearType = year_type)	

#Calculate all HIT Duration High stats

	if(!nrow(dailyQ)== 0) {
		#add nulls for missing data, POR, Site number, and QA codes to data frame and write to database
		if (max(dailyQ[,4])==0) {
			magnifStatsOut2<-cbind(data.frame(dh1=NA, dh2=NA, dh3=NA, dh4=NA, dh5=NA, dh6=NA, dh7=NA, dh8=NA, dh9=NA, dh10=NA, dh11=NA, dh12=NA, dh13=NA, dh14=NA, dh15=NA, dh16=NA, dh17=NA, dh18=NA, dh19=NA, dh20=NA, dh21=NA, dh22=NA, dh23=NA, dh24=NA, site_no=sn, POR_ID=PORID,QualFDSS="NOFLOW",runtime=Sys.time()))
		} else
			if(floodThresh=="NaN"){
			floodThresh='Not Calculated' 
			#add nulls for missing data, POR, Site number, and QA codes to data frame and write to database
			StatsOut2<-cbind(data.frame(dh1=NA, dh2=NA, dh3=NA, dh4=NA, dh5=NA, dh6=NA, dh7=NA, dh8=NA, dh9=NA, dh10=NA, dh11=NA, dh12=NA, dh13=NA, dh14=NA, dh15=NA, dh16=NA, dh17=NA, dh18=NA, dh19=NA, dh20=NA, dh21=NA, dh22=NA, dh23=NA, dh24=NA, site_no=sn, POR_ID=PORID,Qual_HITDurationHigh="FloodThreshNaN",runtime=Sys.time()))
		} else {
			StatsOut <- calc_durationHigh(dailyQClean,yearType=year_type,floodThreshold=floodThresh)
			StatsOut.with.rownames <- data.frame(StatsOut[,-1], row.names=StatsOut[,1])
			StatsOut2<-t(StatsOut.with.rownames)
			#add POR, Site number, and QA codes to data frame and write to database
			StatsOut2<-cbind(StatsOut2, data.frame(site_no=sn, POR_ID=PORID,Qual_HITDurationHigh=QA,runtime=Sys.time()))
		}
	}
}
}


if (exists('StatsOut3')){
	StatsOut3<-rbind(StatsOut3,StatsOut2)
}else{
	StatsOut3=StatsOut2
}

gc()

# End Loop
 x = x+1
 if(x==looptargetx+1)
{
 	break
 }
 }
}

# Write Data to Database
#ch <- odbcConnect("HydroProtocol")
sqlSave(chDH,StatsOut3,"tbl_HIT_DurationHigh_by_PORID",append=TRUE)

# Display total runtime
runtimeend=StatsOut3[looptargetx,7]
runtimestart=StatsOut3[1,7]

# End Outer Loop
 y = y+1
 print(looptargety-y)
 if(y==looptargety+1)
{
 	break
 }
}
odbcClose(chDH)